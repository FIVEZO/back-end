# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev3" ]
  pull_request:
    branches: [ "dev3" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2 # v2.6.0
      with:
        arguments: build

    # ## gradle caching
    # - name: Gradle Caching
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       ~/.gradle/caches
    #       ~/.gradle/wrapper
    #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    #     restore-keys: |
    #       ${{ runner.os }}-gradle-

    ## create application.properties
    - name: Make application.properties
      if: contains(github.ref, 'dev3') # branch가 develop일 때
      run: |
          # spring의 resources 경로로 이동
          cd ./src/main/resources
          
          # application.properties 파일 생성
          touch ./application.properties 
        
          # GitHub-Actions에서 설정한 값을 application.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES_DEV }}" > ./application.properties 
      shell: bash
